#ifndef __GUIFrame__
#define __GUIFrame__

/**
@file
Subclass of Frame, which is generated by wxFormBuilder.
*/

#include "GUI.h"
//// end generated include

#include "Shapes.h"
#include <vector>
/** Implementing Frame */

class GUIFrame : public Frame
{
private:
	bool move_shape, reset, ctrl;
	std::vector <Shapes*> ptr_moving_shape;
	std::vector <Shapes*> ptr_close_shape;
	std::vector <Shapes*> shapes;
	std::vector <Vector> data;
	int last_x, last_y;
	int fig;
protected:
	void panelOnKeyDown(wxKeyEvent& event);
	void panelOnMouseEvents(wxMouseEvent& event);
	void panelOnUpdateUI(wxUpdateUIEvent& event);
	void checkOnButtonClick(wxCommandEvent& event);
	void randomOnButtonClick(wxCommandEvent& event);
	bool if_catch_shape(double x, double y);
	bool is_in_this_shape(Shapes& shp, int sides, double x, double y, bool m, bool ver);

public:
	GUIFrame(wxWindow* parent);
	~GUIFrame();
	void PaintShapes();
};

double f_lin(double a, double b, double x);
void get_points_between(Vector a, Vector b, Vector res[5]);
bool is_aligned(Vector a, Vector b, Vector c, Vector d, double& temp);
bool is_right(std::vector<Vector> d, std::vector<Vector> c);

struct compare {
	bool operator()(const Vector& a, const Vector& b) const;
};
#endif // __GUIFrame__
